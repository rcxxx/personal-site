"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[6677],{7466:function(e,n,t){t.r(n),t.d(n,{assets:function(){return c},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});var r=t(87462),i=t(63366),l=(t(67294),t(3905)),o=["components"],a={id:"esp32-demo-blink",title:"",sidebar_label:"Demo Blink"},p=void 0,s={unversionedId:"computer/pc/devices/esp32/esp32-demo-blink",id:"computer/pc/devices/esp32/esp32-demo-blink",title:"",description:"ESP32 Demo LED Blink",source:"@site/docs/computer/pc/devices/esp32/esp32-demo-blink.md",sourceDirName:"computer/pc/devices/esp32",slug:"/computer/pc/devices/esp32/esp32-demo-blink",permalink:"/personal-site/docs/computer/pc/devices/esp32/esp32-demo-blink",draft:!1,editUrl:"https://github.com/rcxxx/docs/tree/master/docs/computer/pc/devices/esp32/esp32-demo-blink.md",tags:[],version:"current",frontMatter:{id:"esp32-demo-blink",title:"",sidebar_label:"Demo Blink"},sidebar:"\ud83d\udda5\ufe0fPC",previous:{title:"esp32-idf & Clion",permalink:"/personal-site/docs/computer/pc/devices/esp32/esp32-idf-Clion-env"},next:{title:"CLion Flash Settings",permalink:"/personal-site/docs/computer/pc/devices/esp32/esp32-CLion-flash-seria-port-permission"}},c={},d=[{value:"ESP32 Demo LED Blink",id:"esp32-demo-led-blink",level:2},{value:"\u6e90\u7801",id:"\u6e90\u7801",level:3},{value:"\u5b9e\u73b0",id:"\u5b9e\u73b0",level:3},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}],u={toc:d};function m(e){var n=e.components,t=(0,i.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"esp32-demo-led-blink"},"ESP32 Demo LED Blink"),(0,l.kt)("h3",{id:"\u6e90\u7801"},"\u6e90\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'/* Blink Example\n\n   This example code is in the Public Domain (or CC0 licensed, at your option.)\n\n   Unless required by applicable law or agreed to in writing, this\n   software is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR\n   CONDITIONS OF ANY KIND, either express or implied.\n*/\n#include <stdio.h>\n#include "freertos/FreeRTOS.h"\n#include "freertos/task.h"\n#include "driver/gpio.h"\n#include "esp_log.h"\n#include "led_strip.h"\n#include "sdkconfig.h"\n\nstatic const char *TAG = "example";\n\n/* Use project configuration menu (idf.py menuconfig) to choose the GPIO to blink,\n   or you can edit the following line and set a number here.\n*/\n#define BLINK_GPIO CONFIG_BLINK_GPIO\n\nstatic uint8_t s_led_state = 0;\n\n#ifdef CONFIG_BLINK_LED_RMT\nstatic led_strip_t *pStrip_a;\n\nstatic void blink_led(void)\n{\n    /* If the addressable LED is enabled */\n    if (s_led_state) {\n        /* Set the LED pixel using RGB from 0 (0%) to 255 (100%) for each color */\n        pStrip_a->set_pixel(pStrip_a, 0, 16, 16, 16);\n        /* Refresh the strip to send data */\n        pStrip_a->refresh(pStrip_a, 100);\n    } else {\n        /* Set all LED off to clear all pixels */\n        pStrip_a->clear(pStrip_a, 50);\n    }\n}\n\nstatic void configure_led(void)\n{\n    ESP_LOGI(TAG, "Example configured to blink addressable LED!");\n    /* LED strip initialization with the GPIO and pixels number*/\n    pStrip_a = led_strip_init(CONFIG_BLINK_LED_RMT_CHANNEL, BLINK_GPIO, 1);\n    /* Set all LED off to clear all pixels */\n    pStrip_a->clear(pStrip_a, 50);\n}\n\n#elif CONFIG_BLINK_LED_GPIO\n\nstatic void blink_led(void)\n{\n    /* Set the GPIO level according to the state (LOW or HIGH)*/\n    gpio_set_level(BLINK_GPIO, s_led_state);\n}\n\nstatic void configure_led(void)\n{\n    ESP_LOGI(TAG, "Example configured to blink GPIO LED!");\n    gpio_reset_pin(BLINK_GPIO);\n    /* Set the GPIO as a push/pull output */\n    gpio_set_direction(BLINK_GPIO, GPIO_MODE_OUTPUT);\n}\n\n#endif\n\nvoid app_main(void)\n{\n\n    /* Configure the peripheral according to the LED type */\n    configure_led();\n\n    while (1) {\n        ESP_LOGI(TAG, "Turning the LED %s!", s_led_state == true ? "ON" : "OFF");\n        blink_led();\n        /* Toggle the LED state */\n        s_led_state = !s_led_state;\n        vTaskDelay(CONFIG_BLINK_PERIOD / portTICK_PERIOD_MS);\n    }\n}\n')),(0,l.kt)("h3",{id:"\u5b9e\u73b0"},"\u5b9e\u73b0"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5b9a\u4e49 LED \u7684 GPIO\uff0c\u58f0\u660e LED \u7684\u521d\u59cb\u72b6\u6001")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"#define BLINK_GPIO CONFIG_BLINK_GPIO\n\nstatic uint8_t s_led_state = 0;\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"LED \u521d\u59cb\u5316")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'static void configure_led(void)\n{\n    ESP_LOGI(TAG, "Example configured to blink GPIO LED!");\n    gpio_reset_pin(BLINK_GPIO);\n    /* Set the GPIO as a push/pull output */\n    gpio_set_direction(BLINK_GPIO, GPIO_MODE_OUTPUT);\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u901a\u8fc7\u8bbe\u7f6e\u5f15\u811a\u7684\u9ad8\u4f4e\u7535\u5e73\u6539\u53d8 LED \u72b6\u6001")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"static void blink_led(void)\n{\n    /* Set the GPIO level according to the state (LOW or HIGH)*/\n    gpio_set_level(BLINK_GPIO, s_led_state);\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u5faa\u73af\u53d6\u53cd\u8bbe\u7f6eLED\u72b6\u6001\uff0c\u5e76\u6267\u884c\u5ef6\u65f6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'while (1) {\n    ESP_LOGI(TAG, "Turning the LED %s!", s_led_state == true ? "ON" : "OFF");\n    blink_led();\n    /* Toggle the LED state */\n    s_led_state = !s_led_state;\n    vTaskDelay(CONFIG_BLINK_PERIOD / portTICK_PERIOD_MS);\n}\n')),(0,l.kt)("p",null,"\u70e7\u5f55\u7a0b\u5e8f\u540e\u53d1\u73b0\u5e76\u6ca1\u6709 LED \u95ea\u70c1\u7684\u6548\u679c\uff0c\u539f\u56e0\u662fGPIO\u7684\u5f15\u811a\u4e0d\u5bf9\uff0c\u5b98\u65b9\u4f8b\u7a0b\u4e2d\u7684GPIO\u8bbe\u7f6e\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"CONFIG_BLINK_GPIO=5")),(0,l.kt)("p",null,"\u6d4b\u8bd5\u540e\uff0c\u9488\u5bf9\u6211\u8fd9\u5757\u5f00\u53d1\u677f\uff0c\u5c06\u5176\u4fee\u6539\u4e3a ",(0,l.kt)("inlineCode",{parentName:"p"},"2")),(0,l.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u4fee\u6539\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 ",(0,l.kt)("inlineCode",{parentName:"p"},"sdkconfig")," \u6587\u4ef6"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-conf"},"\xb7\xb7\xb7\n#\n# Example Configuration\n#\nCONFIG_BLINK_LED_GPIO=y\n# CONFIG_BLINK_LED_RMT is not set\nCONFIG_BLINK_GPIO=2\nCONFIG_BLINK_PERIOD=1000\n# end of Example Configuration\n\xb7\xb7\xb7\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u4fee\u6539\u540e\u91cd\u65b0\u70e7\u5f55\u7a0b\u5e8f\uff0cLED\u5f00\u59cb\u95ea\u70c1")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5c06\u7f16\u8bd1\u6a21\u5f0f\u4fee\u6539\u4e3a ",(0,l.kt)("inlineCode",{parentName:"li"},"monitor")," \uff0c\u6309 ",(0,l.kt)("inlineCode",{parentName:"li"},"ctrl + F9")," \u8fdb\u5165\u76d1\u6d4b\u6a21\u5f0f")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://pictures-1304295136.cos.ap-guangzhou.myqcloud.com/screenshot/esp32/demo-blink/monitor.png",alt:null})),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8f93\u51fa log \u4fe1\u606f")),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://pictures-1304295136.cos.ap-guangzhou.myqcloud.com/screenshot/esp32/demo-blink/monitor-output.png",alt:null})),(0,l.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},(0,l.kt)("a",{parentName:"strong",href:"https://blog.csdn.net/Aspiration_H/article/details/124226833"},"\u57fa\u4e8eVScode\u7684ESP32\u5f00\u53d1\u5b66\u4e60\uff08\u4e00\uff09\uff1a\u5b98\u65b9\u4f8b\u7a0bblink\uff0c\u5468\u671f\u95ea\u70c1led\u8be6\u89e3\uff0c\u4f18\u4fe1esp32\u7b80\u5355\u4fee\u6539\u9002\u914d")))))}m.isMDXComponent=!0},3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return m}});var r=t(67294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,p=e.parentName,c=a(e,["components","mdxType","originalType","parentName"]),u=s(t),m=i,_=u["".concat(p,".").concat(m)]||u[m]||d[m]||l;return t?r.createElement(_,o(o({ref:n},c),{},{components:t})):r.createElement(_,o({ref:n},c))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,o=new Array(l);o[0]=u;var a={};for(var p in n)hasOwnProperty.call(n,p)&&(a[p]=n[p]);a.originalType=e,a.mdxType="string"==typeof e?e:i,o[1]=a;for(var s=2;s<l;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);