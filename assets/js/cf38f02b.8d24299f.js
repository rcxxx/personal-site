"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[1528],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=a.createContext({}),p=function(e){var n=a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},s=function(e){var n=p(e.components);return a.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,c=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),m=p(t),d=l,k=m["".concat(c,".").concat(d)]||m[d]||u[d]||r;return t?a.createElement(k,o(o({ref:n},s),{},{components:t})):a.createElement(k,o({ref:n},s))}));function d(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=m;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var p=2;p<r;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},8140:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return u}});var a=t(7462),l=t(3366),r=(t(7294),t(3905)),o=["components"],i={id:"opencv-dnn-yolov4",title:"\u4f7f\u7528 CV::DNN \u6a21\u5757\u8bfb\u53d6 YOLO v4 \u6743\u91cd\u8fdb\u884c\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b",sidebar_label:"DNN-YOLO v4"},c=void 0,p={unversionedId:"computer/cv/opencv/dnn/opencv-dnn-yolov4",id:"computer/cv/opencv/dnn/opencv-dnn-yolov4",title:"\u4f7f\u7528 CV::DNN \u6a21\u5757\u8bfb\u53d6 YOLO v4 \u6743\u91cd\u8fdb\u884c\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b",description:"\u51c6\u5907\u5de5\u4f5c",source:"@site/docs/computer/cv/opencv/dnn/dnn-yolov4.md",sourceDirName:"computer/cv/opencv/dnn",slug:"/computer/cv/opencv/dnn/opencv-dnn-yolov4",permalink:"/personal-site/docs/computer/cv/opencv/dnn/opencv-dnn-yolov4",draft:!1,editUrl:"https://github.com/rcxxx/docs/tree/master/docs/computer/cv/opencv/dnn/dnn-yolov4.md",tags:[],version:"current",frontMatter:{id:"opencv-dnn-yolov4",title:"\u4f7f\u7528 CV::DNN \u6a21\u5757\u8bfb\u53d6 YOLO v4 \u6743\u91cd\u8fdb\u884c\u5b9e\u65f6\u76ee\u6807\u68c0\u6d4b",sidebar_label:"DNN-YOLO v4"},sidebar:"\ud83d\udc40CV",previous:{title:"pose computation",permalink:"/personal-site/docs/computer/cv/opencv/tutorials/opencv-solvePnP-pose-computation"},next:{title:"\u8f66\u9053\u7ebf\u68c0\u6d4b",permalink:"/personal-site/docs/computer/cv/opencv/demo/\u8f66\u9053\u7ebf\u68c0\u6d4b/opencv-lane-detect"}},s={},u=[{value:"\u51c6\u5907\u5de5\u4f5c",id:"\u51c6\u5907\u5de5\u4f5c",level:2},{value:"DNN\u6a21\u5757\u7b80\u5355\u4ecb\u7ecd",id:"dnn\u6a21\u5757\u7b80\u5355\u4ecb\u7ecd",level:2},{value:"\u4e0b\u8f7d\u6587\u4ef6",id:"\u4e0b\u8f7d\u6587\u4ef6",level:2},{value:"\u5c1d\u8bd5\u5b9e\u73b0",id:"\u5c1d\u8bd5\u5b9e\u73b0",level:2},{value:"\u6d4b\u8bd5",id:"\u6d4b\u8bd5",level:3},{value:"\u53c2\u8003",id:"\u53c2\u8003",level:2}],m={toc:u};function d(e){var n=e.components,t=(0,l.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"\u51c6\u5907\u5de5\u4f5c"},"\u51c6\u5907\u5de5\u4f5c"),(0,r.kt)("p",null,"\u4f7f\u7528 DNN \u6a21\u5757\u9700\u8981\u7f16\u8bd1 ",(0,r.kt)("inlineCode",{parentName:"p"},"opencv_contrib")," "),(0,r.kt)("p",null,"\u53ef\u4ee5\u53c2\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://sinnammanyo.cn/personal-site/docs/opencv/opencv-install-cpu"},"Install\uff08\u4ec5CPU\uff09"))),(0,r.kt)("p",null,"\u5982\u679c\u9700\u8981\u5f00\u542f GPU \u52a0\u901f\uff0c\u53ef\u4ee5\u53c2\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://sinnammanyo.cn/personal-site/docs/opencv/opencv-install-gpu"},"Install\uff08GPU\uff09"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"cmake")," \u53c2\u6570\u5e94\u6dfb\u52a0\u4e0b\u9762\u8fd9\u4e9b"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"-DWITH_CUDA=ON \\\n-DOPENCV_DNN_CUDA=ON \\\n-DENABLE_FAST_MATH=1 \\\n-DCUDA_FAST_MATH=1 \\\n-DWITH_CUBLAS=1 \\\n")),(0,r.kt)("p",null,"\u5728\u4f60\u6709 GPU \u7684\u60c5\u51b5\u4e0b\u8fd9\u6837\u53ef\u4ee5\u542f\u7528 GPU \u52a0\u901f\u8fd0\u7b97"),(0,r.kt)("h2",{id:"dnn\u6a21\u5757\u7b80\u5355\u4ecb\u7ecd"},"DNN\u6a21\u5757\u7b80\u5355\u4ecb\u7ecd"),(0,r.kt)("h2",{id:"\u4e0b\u8f7d\u6587\u4ef6"},"\u4e0b\u8f7d\u6587\u4ef6"),(0,r.kt)("p",null,"\u5148\u4e0b\u8f7d ",(0,r.kt)("inlineCode",{parentName:"p"},"YOLO v4")," \u7684\u914d\u7f6e\u6587\u4ef6\u548c\u9884\u8bad\u7ec3\u7684\u6743\u91cd"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://raw.githubusercontent.com/AlexeyAB/darknet/master/cfg/yolov4.cfg"},"yolov4.cfg")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolov4.weights"},"yolov4.weights"))),(0,r.kt)("p",null,"\u6a21\u578b\u914d\u7f6e\u6587\u4ef6 ",(0,r.kt)("inlineCode",{parentName:"p"},"yolov4.cfg")," \u4e5f\u53ef\u4ee5\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"opencv_extra")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"testdata/dnn")," \u76ee\u5f55\u4e2d\u627e\u5230"),(0,r.kt)("p",null,"\u7136\u540e\u4e0b\u8f7d ",(0,r.kt)("inlineCode",{parentName:"p"},"coco_classes.txt")," \u6587\u4ef6\uff0c\u56e0\u4e3a\u9884\u8bad\u7ec3\u7684\u6743\u91cd\u4f7f\u7528\u7684\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"coco")," \u6570\u636e\u96c6"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bubbliiiing/yolov4-pytorch/blob/master/model_data/coco_classes.txt"},"coco_classes.txt"))),(0,r.kt)("h2",{id:"\u5c1d\u8bd5\u5b9e\u73b0"},"\u5c1d\u8bd5\u5b9e\u73b0"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8bbe\u7f6e\u6a21\u578b\u6587\u4ef6\u7b49\u7684\u8def\u5f84")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"String yolov4_cfg = argv[1]     // \u914d\u7f6e\u6587\u4ef6\nString yolov4_weights = argv[2] // \u6743\u91cd\u6587\u4ef6\nString coco_classes = argv[3]   // \u6807\u7b7e\u96c6\nString file_name = argv[4]      // \u6d4b\u8bd5\u56fe\u7247\u6587\u4ef6\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u52a0\u8f7d\u6a21\u578b\uff0c\u8bbe\u7f6e\u8ba1\u7b97\u540e\u53f0\u548c\u76ee\u6807\u8bbe\u5907")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"dnn::Net net = dnn::readNetFromDarknet(yolov4_cfg, yolov4_weights);\nnet.setPreferableBackend(dnn::DNN_BACKEND_CUDA);\nnet.setPreferableTarget(dnn::DNN_TARGET_CUDA);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u83b7\u53d6\u7f51\u7edc\u7684\u8f93\u51fa\u5c42\u540d\u79f0")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<String> out_names = net.getUnconnectedOutLayersNames();\nfor (size_t i = 0; i < out_names.size() ; ++i) {\n    cout<< "output layer name: " << out_names[i].c_str() <<endl;\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u52a0\u8f7d\u6a21\u578b\u7684\u6807\u7b7e\u96c6")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'vector<String> class_names;\nstd::ifstream ifs_classes(coco_classes);\nif (ifs_classes.is_open()) {\n    string class_name = "";\n    while (getline(ifs_classes, class_name)) {\n        class_names.push_back(class_name);\n    }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u52a0\u8f7d\u6d4b\u8bd5\u56fe\u7247")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Mat src_img = imread(file_name);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5c06\u56fe\u50cf\u4eceMat\u7c7b\u578b\u8f6c\u6362\u4e3ablob\u7c7b\u578b\uff0c\u5e76\u4f20\u5165\u795e\u7ecf\u7f51\u7edc\u6a21\u578b")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"Mat input_blob = dnn::blobFromImage(src_img, 1 / 255.F, src_img.size(), Scalar(), true, false);\n\nnet.setInput(input_blob);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6267\u884c\u524d\u5411\u4f20\u64ad")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<Mat> outs;\nnet.forward(outs, out_names);\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u8ba1\u7b97FPS")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'// runtime and FPS\nvector<double> layers_time;\ndouble freq = getTickFrequency() / 1000;\ndouble time = net.getPerfProfile(layers_time) / freq;\nString run_time = "run time: " + to_string(time) + "ms";\nputText(src_img, run_time, Point(20, 20), 0, 0.5, Scalar::all(255));\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u83b7\u53d6 box\u3001label")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<Rect> boxes;         // box\nvector<int> class_id;       // label\nvector<float> confidences;  // confidence level\n\nfor (size_t i = 0; i < outs.size(); ++i) {\n    float* data = (float*)(outs[i].data);\n\n    for (int j = 0; j < outs[i].rows; ++j, data += outs[i].cols) {\n        Mat scores = outs[i].row(j).colRange(5, outs[i].cols);\n        Point id_point;\n        double confidence;\n\n        minMaxLoc(scores, nullptr, &confidence, nullptr, &id_point);\n        if (confidence > 0.5) {\n            int center_x = int(data[0] * src_img.cols);\n            int center_y = int(data[1] * src_img.rows);\n            int width = int(data[2] * src_img.cols);\n            int height = int(data[3] * src_img.rows);\n            int tl_x = center_x - width / 2;\n            int tl_y = center_y - height / 2;\n\n            boxes.push_back(Rect(tl_x, tl_y, width, height));\n            class_id.push_back(id_point.x);\n            confidences.push_back(float(confidence));\n        }\n    }\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u6781\u5927\u503c\u975e\u6291\u5236\u540e\u7ed8\u5236 box\u3001label")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},"vector<int> max_idx;\ndnn::NMSBoxes(boxes, confidences, 0.5, 0.2f , max_idx);\nfor (size_t i = 0; i < max_idx.size(); ++i) {\n    int idx = max_idx[i];\n    Rect box = boxes[idx];\n    String label = class_names[class_id[idx]];\n\n    putText(src_img, label.c_str(), box.tl(), FONT_HERSHEY_SIMPLEX, 1.0, Scalar(255, 0, 0), 2, 8);\n    rectangle(src_img, box, Scalar::all(255), 2, 8, 0);\n}\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"imshow")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cpp"},'imshow("src_img", src_img);\nwaitKey(0);\n')),(0,r.kt)("h3",{id:"\u6d4b\u8bd5"},"\u6d4b\u8bd5"),(0,r.kt)("p",null,"\u7f16\u8bd1\u7a0b\u5e8f\u540e\u6267\u884c\uff0c\u4f9d\u6b21\u8f93\u5165\u6587\u4ef6\u8def\u5f84"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"./opencv-dnn-test <yolov4_cfg_path> <yolov4_weights_path> <coco_classes_path> <file_name_path>\n")),(0,r.kt)("p",null,"\u6d4b\u8bd5\u7ed3\u679c\u5982\u4e0b"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://pictures-1304295136.cos.ap-guangzhou.myqcloud.com/screenshot/ubuntu/opencv/opencv_yolo_test.png",alt:null})),(0,r.kt)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://blog.csdn.net/qq_27158179/article/details/81915740"},"\u57fa\u4e8eOpenCV\u548cYOLOv3\u6df1\u5ea6\u5b66\u4e60\u7684\u76ee\u6807\u68c0\u6d4b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://blog.csdn.net/weixin_45224869/article/details/106148983"},"dnn\u6a21\u5757\u4e4b\u57fa\u4e8eYOLOv3\uff08Tiny\uff09\u6a21\u578b\u7684\uff08\u5b9e\u65f6\uff09\u5bf9\u8c61\u68c0\u6d4b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://blog.csdn.net/qq_43019451/article/details/105894552"},"opencv-python dnn\u6a21\u5757\u4f7f\u7528CUDA\u52a0\u901f")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://answers.opencv.org/question/201456/how-to-run-opencv-dnn-on-nvidia-gpu/?answer=201461"},"How to run OpenCV DNN on NVidia GPU")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.pyimagesearch.com/2020/02/03/how-to-use-opencvs-dnn-module-with-nvidia-gpus-cuda-and-cudnn/"},"How to use OpenCV\u2019s \u201cdnn\u201d module with NVIDIA GPUs, CUDA, and cuDNN")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/AlexeyAB/darknet"},"AlexeyAB/darknet")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/bubbliiiing/yolov4-pytorch"},"bubbliiiing/yolov4-pytorch"))))}d.isMDXComponent=!0}}]);