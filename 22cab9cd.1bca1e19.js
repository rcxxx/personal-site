(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{199:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(l,".").concat(m)]||u[m]||b[m]||o;return n?a.a.createElement(d,i(i({ref:t},s),{},{components:n})):a.a.createElement(d,i({ref:t},s))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.a.createElement.apply(null,l)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},200:function(e,t,n){"use strict";function r(e){var t,n,a="";if("string"==typeof e||"number"==typeof e)a+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=r(e[t]))&&(a&&(a+=" "),a+=n);else for(t in e)e[t]&&(a&&(a+=" "),a+=t);return a}t.a=function(){for(var e,t,n=0,a="";n<arguments.length;)(e=arguments[n++])&&(t=r(e))&&(a&&(a+=" "),a+=t);return a}},202:function(e,t,n){"use strict";var r=n(0),a=n(203);t.a=function(){var e=Object(r.useContext)(a.a);if(null==e)throw new Error("`useUserPreferencesContext` is used outside of `Layout` Component.");return e}},203:function(e,t,n){"use strict";var r=n(0),a=Object(r.createContext)(void 0);t.a=a},204:function(e,t,n){"use strict";var r=n(0),a=n.n(r),o=n(202),l=n(200),i=n(55),c=n.n(i),s=37,p=39;t.a=function(e){var t=e.lazy,n=e.block,i=e.defaultValue,u=e.values,b=e.groupId,m=e.className,d=Object(o.a)(),f=d.tabGroupChoices,y=d.setTabGroupChoices,O=Object(r.useState)(i),j=O[0],h=O[1],v=r.Children.toArray(e.children);if(null!=b){var g=f[b];null!=g&&g!==j&&u.some((function(e){return e.value===g}))&&h(g)}var N=function(e){h(e),null!=b&&y(b,e)},x=[];return a.a.createElement("div",null,a.a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:Object(l.a)("tabs",{"tabs--block":n},m)},u.map((function(e){var t=e.value,n=e.label;return a.a.createElement("li",{role:"tab",tabIndex:0,"aria-selected":j===t,className:Object(l.a)("tabs__item",c.a.tabItem,{"tabs__item--active":j===t}),key:t,ref:function(e){return x.push(e)},onKeyDown:function(e){!function(e,t,n){switch(n.keyCode){case p:!function(e,t){var n=e.indexOf(t)+1;e[n]?e[n].focus():e[0].focus()}(e,t);break;case s:!function(e,t){var n=e.indexOf(t)-1;e[n]?e[n].focus():e[e.length-1].focus()}(e,t)}}(x,e.target,e)},onFocus:function(){return N(t)},onClick:function(){N(t)}},n)}))),t?Object(r.cloneElement)(v.filter((function(e){return e.props.value===j}))[0],{className:"margin-vert--md"}):a.a.createElement("div",{className:"margin-vert--md"},v.map((function(e,t){return Object(r.cloneElement)(e,{key:t,hidden:e.props.value!==j})}))))}},205:function(e,t,n){"use strict";var r=n(0),a=n.n(r);t.a=function(e){var t=e.children,n=e.hidden,r=e.className;return a.a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return u})),n.d(t,"default",(function(){return m}));var r=n(3),a=n(7),o=(n(0),n(199)),l=n(204),i=n(205),c=["components"],s={id:"python-serial",title:"Python \u4e32\u53e3\u5e93 pyserial",sidebar_label:"pyserial"},p={unversionedId:"py/python-serial",id:"py/python-serial",isDocsHomePage:!1,title:"Python \u4e32\u53e3\u5e93 pyserial",description:"Python Serial Port Extension for Win32, OSX, Linux, BSD, Jython, IronPython ...",source:"@site/docs/py/py-serial.md",slug:"/py/python-serial",permalink:"/personal-site/docs/py/python-serial",editUrl:"https://github.com/rcxxx/docs/tree/master/docs/py/py-serial.md",version:"current",sidebar_label:"pyserial",sidebar:"\ud83d\udcbb",previous:{title:"C++ \u6807\u51c6\u5e93\u62d3\u5c55boost\u5e93",permalink:"/personal-site/docs/cc/cc-boost-install"},next:{title:"\u5f00\u59cb\u5b66\u4e60\u6570\u636e\u7ed3\u6784",permalink:"/personal-site/docs/data-structures/\u5927\u8bdd\u6570\u636e\u7ed3\u6784/data-structures-introduction"}},u=[{value:"\u5b89\u88c5 <code>pyserial</code>",id:"\u5b89\u88c5-pyserial",children:[]},{value:"\u7b80\u5355\u4f7f\u7528",id:"\u7b80\u5355\u4f7f\u7528",children:[]},{value:"Hex to int",id:"hex-to-int",children:[]},{value:"\u53c2\u8003",id:"\u53c2\u8003",children:[]}],b={toc:u};function m(e){var t=e.components,n=Object(a.a)(e,c);return Object(o.b)("wrapper",Object(r.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("blockquote",null,Object(o.b)("p",{parentName:"blockquote"},"Python Serial Port Extension for Win32, OSX, Linux, BSD, Jython, IronPython ..."),Object(o.b)("ul",{parentName:"blockquote"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pypi.org/project/pyserial/"},"pyserial project - pyserial \xb7 PyPI"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pythonhosted.org/pyserial/"},"documentation"))))),Object(o.b)("h2",{id:"\u5b89\u88c5-pyserial"},"\u5b89\u88c5 ",Object(o.b)("inlineCode",{parentName:"h2"},"pyserial")),Object(o.b)(l.a,{defaultValue:"pip",values:[{label:"pip",value:"pip"},{label:"conda",value:"conda"}],mdxType:"Tabs"},Object(o.b)(i.a,{value:"pip",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"pip install pyserial\n"))),Object(o.b)(i.a,{value:"conda",mdxType:"TabItem"},Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"conda install -c conda-forge pyserial\n")))),Object(o.b)("h2",{id:"\u7b80\u5355\u4f7f\u7528"},"\u7b80\u5355\u4f7f\u7528"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u5f00\u542f\u4e32\u53e3")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},'import serial\n\n_ser = serial.Serial(port="/dev/ttyACM0", baudrate=115200, timeout=0.01)\n')),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u63a5\u6536\u4e32\u53e3")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"str_read = _ser.read(6).hex()\n# 6 \u8bfb\u53d6\u516d\u4e2a\u5b57\u8282\n# .hex() \u5341\u516d\u8fdb\u5236\u8bfb\u53d6\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u53d1\u9001\u4e32\u53e3")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"str_write = 'write_str'\n_ser.write(str_write)\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"\u5173\u95ed\u4e32\u53e3")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"_ser.close()\n")),Object(o.b)("h2",{id:"hex-to-int"},"Hex to int"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"16\u8fdb\u5236\u8f6c\u4e3aint")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-py"},"hex_input  = 'C0A80026'\noutput_list = []\nfor i in range(0,len(hex_input),2)\n    output_list.append(int(hex_input[i:i+2], 16))\n")),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"https://stackoverflow.com/questions/7595148/python-converting-hex-to-int-char"},"Python - Converting Hex to INT/CHAR"))),Object(o.b)("h2",{id:"\u53c2\u8003"},"\u53c2\u8003"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pythonhosted.org/pyserial/"},"documentation"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://pypi.org/project/pyserial/"},"pyserial project - pyserial \xb7 PyPI"))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},Object(o.b)("a",{parentName:"strong",href:"https://stackoverflow.com/questions/12090503/listing-available-com-ports-with-python"},"Listing available com ports with Python")))))}m.isMDXComponent=!0}}]);